# Copyright 2013-2023 Axel Huebl, Rene Widera, Felix Schmitt, Franz Poeschel,
#                     Hannes Tropegen, Brian Marre, Masoud Afshari
#
# This file is part of PIConGPU.
#
# PIConGPU is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# PIConGPU is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with PIConGPU.
# If not, see <http://www.gnu.org/licenses/>.
#

##
## This configuration file is used by PIConGPU's TBG tool to create a
## batch script for PIConGPU runs. For a detailed description of PIConGPU
## configuration files including all available variables, see
##
##                      docs/TBG_macros.cfg
##

# enable unbound variable safeguard
# see `set --help` for explanation on shell flags
# here used: u (`set -u`) which make the shell crash on undefined variables
#
# This defines a command to be executed after this script which restores
# the shell option "u" to its previous state
if [[ "$-" =~ ^.*u.*$ ]]
then
    SHELL_OPT_U_RESTORE='set -u'
else
    SHELL_OPT_U_RESTORE='set +u'
fi

set -u
# -> unbound vars will now raise error


#################################
## Section: Required Variables ##
#################################

TBG_wallTime="1:00:00"

  TBG_devices_x=2
  TBG_devices_y=4
  TBG_devices_z=1

  TBG_gridSize="192 2048 192"

TBG_steps="4000"

#################################
## Section: Optional Variables ##
#################################

  TBG_periodic="--periodic 0 0 0"

# only use charge conservation if solver is yee AND using cuda backend
if [[ "Yee" = "Yee" ]] && [[ "$PIC_BACKEND" =~ ^cuda(:.+)?$ ]]
then
    USED_CHARGE_CONSERVATION_FLAGS="--chargeConservation.period 40"
else
    USED_CHARGE_CONSERVATION_FLAGS=""
fi

  TBG_movingWindow="-m"
  TBG_windowMovePoint="--windowMovePoint 0.90000000000000002"

pypicongpu_output_with_newlines="

        --electron_png.period 100
        --electron_png.axis yx
        --electron_png.slicePoint 0.5
        --electron_png.folder pngElectronsYX

        --electron_energyHistogram.period 100
        --electron_energyHistogram.binCount 1024
        --electron_energyHistogram.minEnergy 0.0
        --electron_energyHistogram.maxEnergy 1000.0
        --electron_energyHistogram.filter all

         --electron_phaseSpace.period 100
         --electron_phaseSpace.space y
         --electron_phaseSpace.momentum py
         --electron_phaseSpace.min -1.0
         --electron_phaseSpace.max 1.0
         --electron_phaseSpace.filter all

        --openPMD.period 100
        --openPMD.file simData
        --openPMD.ext bp

        --checkpoint.backend openPMD
        --checkpoint.period 100
        --checkpoint.restart.backend openPMD

        --electron_macroParticlesCount.period 100
  "

# remove newlines
TBG_pypicongpu_output=$(sed -z 's/\n/ /g' <<< "$pypicongpu_output_with_newlines")

TBG_plugins="!TBG_pypicongpu_output"

#################################
## Section: Program Parameters ##
#################################

TBG_deviceDist="!TBG_devices_x !TBG_devices_y !TBG_devices_z"

TBG_programParams="-d !TBG_deviceDist   \
                   -g !TBG_gridSize     \
                   -s !TBG_steps        \
                   !TBG_periodic        \
                   !TBG_plugins         \
                   !TBG_movingWindow    \
                   !TBG_windowMovePoint \
                   --versionOnce"

# TOTAL number of devices
TBG_tasks="$(( TBG_devices_x * TBG_devices_y * TBG_devices_z ))"

# restore shell opt u to previous state
$SHELL_OPT_U_RESTORE

"$TBG_cfgPath"/submitAction.sh
