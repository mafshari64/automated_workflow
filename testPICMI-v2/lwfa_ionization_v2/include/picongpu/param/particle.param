/* Copyright 2013-2023 Axel Huebl, Rene Widera, Marco Garten, Benjamin Worpitz, 
 *                     Richard Pausch, Masoud Afshari
 *
 * This file is part of PIConGPU.
 *
 * PIConGPU is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PIConGPU is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PIConGPU.
 * If not, see <http://www.gnu.org/licenses/>.
 */

#pragma once

#include <picongpu/unitless/precision.unitless>

#include "picongpu/particles/manipulators/manipulators.def"
#include "picongpu/particles/startPosition/functors.def"

#include <pmacc/math/operation.hpp>

#include <picongpu/pypicongpu/util.hpp>


namespace picongpu
{
    namespace particles
    {
        /** a particle with a weighting below MIN_WEIGHTING will not
         *      be created / will be deleted
         *  unit: none
         */
        constexpr float_X MIN_WEIGHTING = 10.0;

        namespace startPosition
        {
            namespace pypicongpu
            {
                    struct random_ppc_species_hydrogen
                    {
                        /** Maximum number of macro-particles per cell during density profile evaluation.
                         *
                         * Determines the weighting of a macro particle as well as the number of
                         * macro-particles which sample the evolution of the particle distribution
                         * function in phase space.
                         *
                         * unit: none
                         */
                        static constexpr uint32_t numParticlesPerCell = 2;
                    };
                    using init_species_hydrogen = RandomImpl<random_ppc_species_hydrogen>;
            } // namespace pypicongpu
        } // namespace startPosition

        /** Approximate number of maximum macro-particles per cell.
         *
         * Used internally for unit normalization.
         */
        constexpr uint32_t TYPICAL_PARTICLES_PER_CELL = 1u;

        namespace manipulators
        {
            namespace pypicongpu {





                    //! definition of PreIonized manipulator
                    using PreIonize_species_hydrogen = unary::ChargeState<0u>;;
            } // namespace pypicongpu
        } // namespace manipulators
    } // namespace particles
} // namespace picongpu
