/* Copyright 2013-2024 Rene Widera, Benjamin Worpitz, Heiko Burau,
 *                     Hannes Troepgen
 *
 * This file is part of PIConGPU.
 *
 * PIConGPU is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PIConGPU is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PIConGPU.
 * If not, see <http://www.gnu.org/licenses/>.
 */

#pragma once

#include "picongpu/simulation_defines.hpp"

#include "picongpu/particles/Particles.hpp"

#include <pmacc/identifier/value_identifier.hpp>
#include <pmacc/meta/String.hpp>
#include <pmacc/meta/conversion/MakeSeq.hpp>
#include <pmacc/particles/Identifier.hpp>
#include <pmacc/particles/traits/FilterByFlag.hpp>

namespace picongpu
{
        /****************************************
            Definition of Species electron
        ****************************************/

                value_identifier(float_X, MassRatio_species_electron, 9.1093837015000008e-31 / SI::BASE_MASS_SI);
                value_identifier(float_X, ChargeRatio_species_electron, -1.6021766339999999e-19 / SI::BASE_CHARGE_SI);

        using ParticleFlags_species_electron = MakeSeq_t<
                    massRatio<MassRatio_species_electron>,
                    chargeRatio<ChargeRatio_species_electron>,



            particlePusher<UsedParticlePusher>,
            shape<UsedParticleShape>,
            interpolation<UsedField2Particle>,
            current<UsedParticleCurrentSolver>>;

        using ParticleAttributes_species_electron = MakeSeq_t<
                position<position_pic>
                    ,
                weighting
                    ,
                momentum
            >;

        using species_electron = Particles<
            PMACC_CSTRING("electron"),
            ParticleFlags_species_electron,
            ParticleAttributes_species_electron>;
        /****************************************
            Definition of Species hydrogen
        ****************************************/

                value_identifier(float_X, MassRatio_species_hydrogen, 1.6737237467888039e-27 / SI::BASE_MASS_SI);
                value_identifier(float_X, ChargeRatio_species_hydrogen, 1.6021766339999999e-19 / SI::BASE_CHARGE_SI);

        using ParticleFlags_species_hydrogen = MakeSeq_t<
                    massRatio<MassRatio_species_hydrogen>,
                    chargeRatio<ChargeRatio_species_hydrogen>,

                    ionizers<MakeSeq_t<
                        particles::ionization::ADKCircPol<
                            species_electron
                            , particles::ionization::current::None
                        >,
                        particles::ionization::BSIEffectiveZ<
                            species_electron
                            , particles::ionization::current::None
                        >
                    >>,

                    atomicNumbers<ionization::atomicNumbers::Hydrogen_t>,
                    ionizationEnergies<ionization::energies::AU::Hydrogen_t>,
                    effectiveNuclearCharge<ionization::effectiveNuclearCharge::Hydrogen_t>,

            particlePusher<UsedParticlePusher>,
            shape<UsedParticleShape>,
            interpolation<UsedField2Particle>,
            current<UsedParticleCurrentSolver>>;

        using ParticleAttributes_species_hydrogen = MakeSeq_t<
                position<position_pic>
                    ,
                weighting
                    ,
                momentum
                    ,
                boundElectrons
            >;

        using species_hydrogen = Particles<
            PMACC_CSTRING("hydrogen"),
            ParticleFlags_species_hydrogen,
            ParticleAttributes_species_hydrogen>;


    using VectorAllSpecies = MakeSeq_t<
            species_electron
                ,
            species_hydrogen
        >;
} // namespace picongpu
